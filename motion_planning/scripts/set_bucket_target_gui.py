# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'set_bucket_target.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import rospy
from geometry_msgs.msg import Point
from marker_publisher import MarkerPublisher

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):

        self.pub = rospy.Publisher("/bucket_target_point", Point, queue_size=10)
        self.markerPublisher = MarkerPublisher('/bucket_target_selector',type = 0,id = 2,color = 'g',scale = 0.1)


        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(985, 608)


        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.x_label = QtWidgets.QLabel(self.centralwidget)
        self.x_label.setGeometry(QtCore.QRect(150, 160, 91, 41))
        self.x_label.setObjectName("x_label")
        self.y_label = QtWidgets.QLabel(self.centralwidget)
        self.y_label.setGeometry(QtCore.QRect(470, 160, 91, 41))
        self.y_label.setObjectName("y_label")
        self.z_label = QtWidgets.QLabel(self.centralwidget)
        self.z_label.setGeometry(QtCore.QRect(800, 160, 91, 41))
        self.z_label.setObjectName("z_label")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(430, 90, 141, 51))
        self.label.setObjectName("label")

        self.x_Slider = QtWidgets.QSlider(self.centralwidget)
        self.x_Slider.setGeometry(QtCore.QRect(150, 240, 51, 201))
        self.x_Slider.setMaximum(99)
        self.x_Slider.setProperty("value", 50)
        self.x_Slider.setOrientation(QtCore.Qt.Vertical)
        self.x_Slider.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.x_Slider.setTickInterval(10)
        self.x_Slider.setObjectName("x_Slider")
        self.x_Slider.valueChanged.connect(self.slider_value_changed)

        self.y_Slider = QtWidgets.QSlider(self.centralwidget)
        self.y_Slider.setGeometry(QtCore.QRect(460, 240, 51, 201))
        self.y_Slider.setMaximum(99)
        self.y_Slider.setProperty("value", 50)
        self.y_Slider.setOrientation(QtCore.Qt.Vertical)
        self.y_Slider.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.y_Slider.setObjectName("y_Slider")
        self.y_Slider.valueChanged.connect(self.slider_value_changed)

        self.z_Slider = QtWidgets.QSlider(self.centralwidget)
        self.z_Slider.setGeometry(QtCore.QRect(790, 240, 51, 201))
        self.z_Slider.setMaximum(99)
        self.z_Slider.setProperty("value", 50)
        self.z_Slider.setOrientation(QtCore.Qt.Vertical)
        self.z_Slider.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.z_Slider.setObjectName("z_Slider")
        self.z_Slider.valueChanged.connect(self.slider_value_changed)

        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(430, 470, 121, 61))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.set_target)


        self.x_label_2 = QtWidgets.QLabel(self.centralwidget)
        self.x_label_2.setGeometry(QtCore.QRect(220, 410, 91, 41))
        self.x_label_2.setObjectName("x_label_2")
        self.x_label_3 = QtWidgets.QLabel(self.centralwidget)
        self.x_label_3.setGeometry(QtCore.QRect(220, 230, 91, 41))
        self.x_label_3.setObjectName("x_label_3")
        self.x_label_4 = QtWidgets.QLabel(self.centralwidget)
        self.x_label_4.setGeometry(QtCore.QRect(530, 410, 91, 41))
        self.x_label_4.setObjectName("x_label_4")
        self.x_label_5 = QtWidgets.QLabel(self.centralwidget)
        self.x_label_5.setGeometry(QtCore.QRect(530, 230, 91, 41))
        self.x_label_5.setObjectName("x_label_5")
        self.x_label_6 = QtWidgets.QLabel(self.centralwidget)
        self.x_label_6.setGeometry(QtCore.QRect(860, 410, 91, 41))
        self.x_label_6.setObjectName("x_label_6")
        self.x_label_7 = QtWidgets.QLabel(self.centralwidget)
        self.x_label_7.setGeometry(QtCore.QRect(860, 230, 91, 41))
        self.x_label_7.setObjectName("x_label_7")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 985, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.x_label.setText(_translate("MainWindow", "X (m)"))
        self.y_label.setText(_translate("MainWindow", "Y (m)"))
        self.z_label.setText(_translate("MainWindow", "Z (m)"))
        self.label.setText(_translate("MainWindow", "Bound Pointclouds"))
        self.x_label_2.setText(_translate("MainWindow", "-1"))
        self.x_label_3.setText(_translate("MainWindow", "1"))
        self.x_label_4.setText(_translate("MainWindow", "-1"))
        self.x_label_5.setText(_translate("MainWindow", "1"))
        self.x_label_6.setText(_translate("MainWindow", "-1"))
        self.x_label_7.setText(_translate("MainWindow", "1"))
        self.pushButton.setText(_translate("MainWindow", "Set Target"))

    def slider_value_changed(self):
        x,y,z = self.get_bounding_box_params()


        print("slider values:")
        print("x = %f, y = %f, z = %f"%(x,y,z))
        self.markerPublisher.publish([[x,y,z]])
        

    def set_target(self):
        x,y,z = self.get_bounding_box_params()
        print("Target:")
        print("x = %f, y = %f, z = %f"%(x,y,z))
        target_point = Point(x,y,z)
        self.pub.publish(target_point)

    def get_bounding_box_params(self):
        step_size_xyz = 0.02
        x = (self.x_Slider.value() - 50) * step_size_xyz
        y = (self.y_Slider.value() - 50) * step_size_xyz
        z = (self.z_Slider.value() - 50) * step_size_xyz
        return x,y,z


if __name__ == "__main__":
    rospy.init_node('set_bucket_target', anonymous=True)
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
